name: Deploy
on:
  push:
    branches:
      - ci
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm ci

      - name: Create env file
        run: |
          echo NEXT_PUBLIC_BASE_URL=${{ secrets.NEXT_PUBLIC_BASE_URL }} >> .env.local
          echo NEXT_PUBLIC_REDIRECT_URI=${{ secrets.NEXT_PUBLIC_REDIRECT_URI }} >> .env.local
          echo NEXT_PUBLIC_STATE_CSRF=${{ secrets.NEXT_PUBLIC_STATE_CSRF }} >> .env.local

          echo NEXT_PUBLIC_KAKAO_REST_ID=${{ secrets.NEXT_PUBLIC_KAKAO_REST_ID }} >> .env.local
          echo NEXT_PUBLIC_KAKAO_URL=${{ secrets.NEXT_PUBLIC_KAKAO_TEST }} >> .env.local

          echo NEXT_PUBLIC_NAVER_CLIENT_ID=${{ secrets.NEXT_PUBLIC_NAVER_CLIENT_ID }} >> .env.local
          echo NEXT_PUBLIC_NAVER_URL="${{ secrets.NEXT_PUBLIC_NAVER_LINK }}" >> .env.local

          echo NEXT_PUBLIC_DISCORD_CLIENT_ID=${{ secrets.NEXT_PUBLIC_DISCORD_CLIENT_ID }} >> .env.local
          echo NEXT_PUBLIC_DISCORD_PUBLIC_KEY=${{ secrets.NEXT_PUBLIC_DISCORD_PUBLIC_KEY }} >> .env.local
          echo NEXT_PUBLIC_DISCORD_URL=${{ secrets.NEXT_PUBLIC_DISCORD_TEST }} >> .env.local

          echo NEXT_PUBLIC_RIOT_CHAMPION_IMG_URL=${{ secrets.NEXT_PUBLIC_RIOT_CHAMPION_IMG_URL }} >> .env.local
          echo NEXT_PUBLIC_RIOT_SPELL_IMG_URL=${{ secrets.NEXT_PUBLIC_RIOT_SPELL_IMG_URL }} >> .env.local
          echo NEXT_PUBLIC_RIOT_PERK_IMG_URL=${{ secrets.NEXT_PUBLIC_RIOT_PERK_IMG_URL }} >> .env.local
          cat .env.local

      - name: Build
        run: npm run build

      - name: zip create
        run: zip -qq -r ./build.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp --region ap-northeast-2 ./build.zip s3://duo-deploy-bucket/build/build.zip

      - name: Deploy
        run: aws deploy create-deployment
          --application-name duo-deploy
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name deploy-group
          --s3-location bucket=duo-deploy-bucket,key=build/build.zip,bundleType=zip
